getwd
getwd()
tip <- read.csv(file = "tips.csv",header=TRUE,stringsAsFactors = TRUE)
View(tips)
print(tips$total_bill)
tips <- read.csv(file = "tips.csv",header=TRUE,stringsAsFactors = TRUE)
tips <- read.csv(file = "tips.csv",header=TRUE,stringsAsFactors = TRUE)
View(tips)
print(tips$total_bill)
data1 = tips$total_bill
mean_data1 = mean(data1)
sd_data1 = sd(data1)
sprintf("mean of data 1 is %f",mean_data1)
sprintf("standard diviation is %f",sd_data1)
med = median(tips$tip)
sprintf("median of tip is %.2f",med)
sprintf("mean and median of tip when size > 3 is %.2f and %.2f",mean,med)
mean = mean(tips$tip[tips$size > 3])
med = median(tips$tip[tips$size > 3])
sprintf("mean and median of tip when size > 3 is %.2f and %.2f",mean,med)
xtab = table(tips$size)
max(xtab)
mode <- xtab[xtab == max(xtab)]
mode
prop
xtab <- table(tips$time)
xtab
prop <- table(tips(tips$time)/nrow(tips))
xtab <- table(tips$time)
xtab
prop <- table((tips$time)/nrow(tips))
prop
prop <- table(tips$time/nrow(tips))
xtab <- table(tips$time)
xtab
prop <- table(tips$time/nrow(tips))
prop
xtab <- table(tips$time)
xtab
prop <- table(tips$time)/nrow(tips)
prop
xtab <- table(tips$time)
xtab
prop <- table(tips$time)/nrow(tips)
prop
percent <- round(mean(tips$time == "Dinner")*100,2)
percent
summary(tips$tip)
quantile(tips$tip,prob=c(0.25,0.75))
summary(tips$tip)
quantile(tips$tip,prob=c(0.25,0.75))
hist(tips$tip)
var(tips$tip)
sd(tips$tip)
IQR(tips$tip)
xtab <- table(tips$time)
barplot(xtab)
pie(xtab)
hist(tips$total_bill)
boxplot(tips$total_bill)
boxplot(tips$total_bill~tips$time)
xtab <- table(tips$time)
barplot(xtab)
pie(xtab)
hist(tips$total_bill)
boxplot(tips$total_bill)
boxplot(tips$total_bill~tips$time)
xtab <- table(tips$time)
barplot(xtab)
pie(xtab)
hist(tips$total_bill)
xtab <- table(tips$time)
barplot(xtab)
pie(xtab)
hist(tips$total_bill)
boxplot(tips$total_bill)
xtab <- table(tips$time)
barplot(xtab)
pie(xtab)
hist(tips$total_bill)
boxplot(tips$total_bill)
boxplot(tips$total_bill~tips$time)
dbinom(x=5,size=8,prob=1/6)
X.prob <- dbinom(x=0:8,size=8,prob=1/6)
X.prob
sum(X.prob)
pbinom(q=3,size=8,prob=1/6)
sum(dbino(x=0:3,size=8,prob=1/6))
pbinom(q=3,size=8,prob=1/6)
sum(dbinom(x=0:3,size=8,prob=1/6))
1-pbinom(q=3,size=8,prob=1/6)
qbinom(p=0.95,size=8,prob=1/6)
qbinom(n=1,size=8,prob=1/6)
rbinom(n=1,size=8,prob=1/6)
rbinom(n=3,size=8,prob=1/6)
dpois(x=3,lambda=3.22)
round(dpois(0:5,3.22),3)
ppois(q=5,lambda=3.22)
1-ppois(q=5,lambda=3.22)
qpois(p=0.95,lambda=3.22)
rpois(n=5,lambda=3.22)
xvals <- seq(-1,1,length=5)
dnorm(xvals,mean=0,sd=1)
mu <- 3.40 ; sigma <-1.8
pnorm(q=mean+sd,mean=mu,sd=sigma)
1-pnorm(q=mean + sd,mean=mu,sd=sigma)
mu <- 3.40 ; sigma <-1.8
pnorm(q=mean+sd,mean=mu,sd=sigma)
mu <- 3.40 ; sigma <-1.8
pnorm(q=mean+sd,mean=mu,sd=sigma)
qnorm(p=0.159,mean=mu,sd=sigma)
mu <- 3.40 ; sigma <-1.8
pnorm(q=mu+sigma,mean=mu,sd=sigma)
1-pnorm(q=mean+sd,mean=mu,sd=sigma)
mu <- 3.40 ; sigma <-1.8
pnorm(q=mu+sigma,mean=mu,sd=sigma)
1-pnorm(q=mu+sigma,mean=mu,sd=sigma)
dunif(x=0.05,min=-0.4,max=1.1)
dunif(x=c(-2,-0.33,1.05,1.2),min=-0.4,max=1.1)
punif(q=-0.21,min=-0.4,max=1.1)
1-punif(q=-0.21,min=-0.4,max=1.1)
qunif(p=0.7,min=-0.4,max=1.1)
runif(n=5,min=-0.4,max=1.1)
xvals <-- seq(1,10,length = 5 )
dexp(xvals,rate=1.65)
xvals <-- seq(1,10,length = 5 )
1-dexp(xvals,rate=1.65)
pexp(q=1.5,rate=1.65)
1-pexp(q=1.5,rate=1.65)
qexp=(p=0.15,rate=1.65)
qexp(p=0.15,rate=1.65)
fakedata1 <- rexp(n=5,rate=1.65)
fakedata1
barplot(X.prob,names.arg=0:8,space=0)
barplot(X.prob,names.arg=0:8,space=0,xlab="x",ylab="Pr(X=x)")
barplot(X.prob,names.arg=0:8,space=0)
barplot(X.prob,names.arg=0:8,space=1)
source("D:/Naphop Coding/R/test.R")
setwd("D:\\Naphop Coding\\R\\March\\66_3_8")
getwd()
getwd()
plot(cars)
library(XLConnect)
library(readxl)
library(XLConnect)
library(readxl)
library(tidyverse)
library(broom)
library(psych)
library(modelr)
library()
library(XLConnect)
library(readxl)
library(tidyverse)
library(broom)
library(psych)
library(modelr)
library()
library(psych)
library(modelr)
library()
install.packages("modelr")
install.packages("ggfortify")
library(modelr)
library(ggfortify)
print "Hello World"
Hello World
"2"
LW = loadWorkbook(demo)
LW = loadWorkbook(demo)
LW = loadWorkbook(demo)
LW = loadWorkbook(demo)
LW = loadWorkbook(demo)
LW = loadWorkbook(demo)
LW = loadWorkbook(demo)
LW = loadworkbook(demo)
LW = loadworkbook(demo)
LW = loadworkbook(demo)
LW = loadworkbook(demo)
LW = loadworkbook(demo)
LW -> loadworkbook(demo)
LW <- loadworkbook(demo)
install.packages("XLConnect")
LW <- loadworkbook(demo)
demo = "Expense.xlsx"
LW = loadWorkbook(demo)
getwd()
demo = "Expense.xlsx"
LW = loadworkbook(demo)
library(XLConnect)
demo = "Expense.xlsx"
LW = loadWorkbook(demo)
LW
RW <- readWorksheet(LW,sheet = "Expenditure")
RW
RW2 <- readWorksheet(LW,sheet = "Meal")
RW2
RW2 <- readWorksheet(LW,sheet = "Meal")
RW2
df = data.frame(RW)
df
df
df
reticulate::repl_python()
